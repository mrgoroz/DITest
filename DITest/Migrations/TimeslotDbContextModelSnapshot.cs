// <auto-generated />
using System;
using DITest.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DITest.Migrations
{
    [DbContext(typeof(TimeslotDbContext))]
    partial class TimeslotDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DITest.Models.Address", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("line1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("line2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("postcode")
                        .HasColumnType("int");

                    b.Property<string>("street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("DITest.Models.Delivery", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("userid");

                    b.ToTable("Delivery");
                });

            modelBuilder.Entity("DITest.Models.Timeslot", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("delivery_1id")
                        .HasColumnType("int");

                    b.Property<int?>("delivery_2id")
                        .HasColumnType("int");

                    b.Property<DateTime>("endTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("startTime")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("delivery_1id");

                    b.HasIndex("delivery_2id");

                    b.ToTable("Timeslot");
                });

            modelBuilder.Entity("DITest.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("addressid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("addressid");

                    b.ToTable("User");
                });

            modelBuilder.Entity("DITest.Models.Delivery", b =>
                {
                    b.HasOne("DITest.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("DITest.Models.Timeslot", b =>
                {
                    b.HasOne("DITest.Models.Delivery", "delivery_1")
                        .WithMany()
                        .HasForeignKey("delivery_1id");

                    b.HasOne("DITest.Models.Delivery", "delivery_2")
                        .WithMany()
                        .HasForeignKey("delivery_2id");

                    b.Navigation("delivery_1");

                    b.Navigation("delivery_2");
                });

            modelBuilder.Entity("DITest.Models.User", b =>
                {
                    b.HasOne("DITest.Models.Address", "address")
                        .WithMany()
                        .HasForeignKey("addressid");

                    b.Navigation("address");
                });
#pragma warning restore 612, 618
        }
    }
}
